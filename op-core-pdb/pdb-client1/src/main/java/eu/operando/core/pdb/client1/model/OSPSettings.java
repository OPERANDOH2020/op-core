/*
 * Policy DB
 * The Policy Database that stores three types of documents in dedicated collections.   1) User Privacy Policy. Each OPERANDO user has one UPP document describing their privacy policies for each of the OSP services they are subscribed to. The UPP contains the current B2C privacy settings for a subscribed to OSP. The UPP contains the users privacy preferences. The UPP contains the G2C access policies for the OSP with justification for access.   2) The legislation policies. The regulations entered into OPERANDO using the OPERANDO regulation API.   3) The OSP descriptions and data requests. For each OSP its privacy policy, its access control rules, and the data it requests (as a workflow). For B2C, the set of privacy settings is stored. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.operando.core.pdb.client1.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import eu.operando.core.pdb.client1.model.PrivacySetting;
import java.util.ArrayList;
import java.util.List;

/**
 * OSPSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-13T14:33:54.425Z")
public class OSPSettings {
  @SerializedName("osp_id")
  private String ospId = null;

  @SerializedName("osp_settings")
  private List<PrivacySetting> ospSettings = new ArrayList<PrivacySetting>();

  public OSPSettings ospId(String ospId) {
    this.ospId = ospId;
    return this;
  }

   /**
   * The unique ID of the OSP user is subscribed to and these settings concern.  
   * @return ospId
  **/
  @ApiModelProperty(example = "null", value = "The unique ID of the OSP user is subscribed to and these settings concern.  ")
  public String getOspId() {
    return ospId;
  }

  public void setOspId(String ospId) {
    this.ospId = ospId;
  }

  public OSPSettings ospSettings(List<PrivacySetting> ospSettings) {
    this.ospSettings = ospSettings;
    return this;
  }

  public OSPSettings addOspSettingsItem(PrivacySetting ospSettingsItem) {
    this.ospSettings.add(ospSettingsItem);
    return this;
  }

   /**
   * The list of privacy settings at an OSP
   * @return ospSettings
  **/
  @ApiModelProperty(example = "null", value = "The list of privacy settings at an OSP")
  public List<PrivacySetting> getOspSettings() {
    return ospSettings;
  }

  public void setOspSettings(List<PrivacySetting> ospSettings) {
    this.ospSettings = ospSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OSPSettings osPSettings = (OSPSettings) o;
    return Objects.equals(this.ospId, osPSettings.ospId) &&
        Objects.equals(this.ospSettings, osPSettings.ospSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ospId, ospSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OSPSettings {\n");
    
    sb.append("    ospId: ").append(toIndentedString(ospId)).append("\n");
    sb.append("    ospSettings: ").append(toIndentedString(ospSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

