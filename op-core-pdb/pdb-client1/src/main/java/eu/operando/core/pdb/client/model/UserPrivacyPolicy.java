/**
 * Policy DB
 * The Policy Database that stores three types of documents in dedicated collections.   1) User Privacy Policy. Each OPERANDO user has one UPP document describing their privacy policies for each of the OSP services they are subscribed to. The UPP contains the current B2C privacy settings for a subscribed to OSP. The UPP contains the users privacy preferences. The UPP contains the G2C access policies for the OSP with justification for access.   2) The legislation policies. The regulations entered into OPERANDO using the OPERANDO regulation API.   3) The OSP descriptions and data requests. For each OSP its privacy policy, its access control rules, and the data it requests (as a workflow). For B2C, the set of privacy settings is stored. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package eu.operando.core.pdb.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import eu.operando.core.pdb.client.model.OSPConsents;
import eu.operando.core.pdb.client.model.OSPSettings;
import eu.operando.core.pdb.client.model.UserPreference;
import java.util.ArrayList;
import java.util.List;


/**
 * UserPrivacyPolicy
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-28T10:18:38.563Z")
public class UserPrivacyPolicy   {
  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("user_preferences")
  private List<UserPreference> userPreferences = new ArrayList<UserPreference>();

  @SerializedName("subscribed_osp_policies")
  private List<OSPConsents> subscribedOspPolicies = new ArrayList<OSPConsents>();

  @SerializedName("subscribed_osp_settings")
  private List<OSPSettings> subscribedOspSettings = new ArrayList<OSPSettings>();

  public UserPrivacyPolicy userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The unique operando id of the user this policy is about. Each OPERANDO user has one and only one UPP.
   * @return userId
  **/
  @ApiModelProperty(example = "null", value = "The unique operando id of the user this policy is about. Each OPERANDO user has one and only one UPP.")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public UserPrivacyPolicy userPreferences(List<UserPreference> userPreferences) {
    this.userPreferences = userPreferences;
    return this;
  }

  public UserPrivacyPolicy addUserPreferencesItem(UserPreference userPreferencesItem) {
    this.userPreferences.add(userPreferencesItem);
    return this;
  }

   /**
   * User stated preferences (questionnaire answers)
   * @return userPreferences
  **/
  @ApiModelProperty(example = "null", value = "User stated preferences (questionnaire answers)")
  public List<UserPreference> getUserPreferences() {
    return userPreferences;
  }

  public void setUserPreferences(List<UserPreference> userPreferences) {
    this.userPreferences = userPreferences;
  }

  public UserPrivacyPolicy subscribedOspPolicies(List<OSPConsents> subscribedOspPolicies) {
    this.subscribedOspPolicies = subscribedOspPolicies;
    return this;
  }

  public UserPrivacyPolicy addSubscribedOspPoliciesItem(OSPConsents subscribedOspPoliciesItem) {
    this.subscribedOspPolicies.add(subscribedOspPoliciesItem);
    return this;
  }

   /**
   * The user policies for each OSP they subscribe to.
   * @return subscribedOspPolicies
  **/
  @ApiModelProperty(example = "null", value = "The user policies for each OSP they subscribe to.")
  public List<OSPConsents> getSubscribedOspPolicies() {
    return subscribedOspPolicies;
  }

  public void setSubscribedOspPolicies(List<OSPConsents> subscribedOspPolicies) {
    this.subscribedOspPolicies = subscribedOspPolicies;
  }

  public UserPrivacyPolicy subscribedOspSettings(List<OSPSettings> subscribedOspSettings) {
    this.subscribedOspSettings = subscribedOspSettings;
    return this;
  }

  public UserPrivacyPolicy addSubscribedOspSettingsItem(OSPSettings subscribedOspSettingsItem) {
    this.subscribedOspSettings.add(subscribedOspSettingsItem);
    return this;
  }

   /**
   * The user settings for each of their services
   * @return subscribedOspSettings
  **/
  @ApiModelProperty(example = "null", value = "The user settings for each of their services")
  public List<OSPSettings> getSubscribedOspSettings() {
    return subscribedOspSettings;
  }

  public void setSubscribedOspSettings(List<OSPSettings> subscribedOspSettings) {
    this.subscribedOspSettings = subscribedOspSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPrivacyPolicy userPrivacyPolicy = (UserPrivacyPolicy) o;
    return Objects.equals(this.userId, userPrivacyPolicy.userId) &&
        Objects.equals(this.userPreferences, userPrivacyPolicy.userPreferences) &&
        Objects.equals(this.subscribedOspPolicies, userPrivacyPolicy.subscribedOspPolicies) &&
        Objects.equals(this.subscribedOspSettings, userPrivacyPolicy.subscribedOspSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, userPreferences, subscribedOspPolicies, subscribedOspSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPrivacyPolicy {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userPreferences: ").append(toIndentedString(userPreferences)).append("\n");
    sb.append("    subscribedOspPolicies: ").append(toIndentedString(subscribedOspPolicies)).append("\n");
    sb.append("    subscribedOspSettings: ").append(toIndentedString(subscribedOspSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

