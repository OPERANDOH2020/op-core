/*
 * Policy DB
 * The Policy Database that stores three types of documents in dedicated collections.   1) User Privacy Policy. Each OPERANDO user has one UPP document describing their privacy policies for each of the OSP services they are subscribed to. The UPP contains the current B2C privacy settings for a subscribed to OSP. The UPP contains the users privacy preferences. The UPP contains the G2C access policies for the OSP with justification for access.   2) The legislation policies. The regulations entered into OPERANDO using the OPERANDO regulation API.   3) The OSP descriptions and data requests. For each OSP its privacy policy, its access control rules, and the data it requests (as a workflow). For B2C, the set of privacy settings is stored. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.operando.core.pdb.client1.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A privacy rule that reflects a given privacy legislation as described by a particular set of laws in a given jurisdiction. 
 */
@ApiModel(description = "A privacy rule that reflects a given privacy legislation as described by a particular set of laws in a given jurisdiction. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-13T14:33:54.425Z")
public class PrivacyRegulation {
  @SerializedName("reg_id")
  private String regId = null;

  @SerializedName("legislation_sector")
  private String legislationSector = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("private_information_type")
  private String privateInformationType = null;

  @SerializedName("action")
  private String action = null;

  @SerializedName("required_consent")
  private String requiredConsent = null;

  public PrivacyRegulation regId(String regId) {
    this.regId = regId;
    return this;
  }

   /**
   * Get regId
   * @return regId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRegId() {
    return regId;
  }

  public void setRegId(String regId) {
    this.regId = regId;
  }

  public PrivacyRegulation legislationSector(String legislationSector) {
    this.legislationSector = legislationSector;
    return this;
  }

   /**
   * The identifier of the set of legislation rules this rule belongs to e.g. the UK data protection act. 
   * @return legislationSector
  **/
  @ApiModelProperty(example = "null", required = true, value = "The identifier of the set of legislation rules this rule belongs to e.g. the UK data protection act. ")
  public String getLegislationSector() {
    return legislationSector;
  }

  public void setLegislationSector(String legislationSector) {
    this.legislationSector = legislationSector;
  }

  public PrivacyRegulation reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * The purpose for performing an action on data e.g. medical care, marketing, admin
   * @return reason
  **/
  @ApiModelProperty(example = "null", value = "The purpose for performing an action on data e.g. medical care, marketing, admin")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public PrivacyRegulation privateInformationType(String privateInformationType) {
    this.privateInformationType = privateInformationType;
    return this;
  }

   /**
   * The type of private information; e.g. is it information that identifies the user (e.g. id number)? is it location information about the user? Is it about their activities? 
   * @return privateInformationType
  **/
  @ApiModelProperty(example = "null", value = "The type of private information; e.g. is it information that identifies the user (e.g. id number)? is it location information about the user? Is it about their activities? ")
  public String getPrivateInformationType() {
    return privateInformationType;
  }

  public void setPrivateInformationType(String privateInformationType) {
    this.privateInformationType = privateInformationType;
  }

  public PrivacyRegulation action(String action) {
    this.action = action;
    return this;
  }

   /**
   * The action being carried out on the data
   * @return action
  **/
  @ApiModelProperty(example = "null", value = "The action being carried out on the data")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public PrivacyRegulation requiredConsent(String requiredConsent) {
    this.requiredConsent = requiredConsent;
    return this;
  }

   /**
   * The type of consent that must be followed
   * @return requiredConsent
  **/
  @ApiModelProperty(example = "null", value = "The type of consent that must be followed")
  public String getRequiredConsent() {
    return requiredConsent;
  }

  public void setRequiredConsent(String requiredConsent) {
    this.requiredConsent = requiredConsent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivacyRegulation privacyRegulation = (PrivacyRegulation) o;
    return Objects.equals(this.regId, privacyRegulation.regId) &&
        Objects.equals(this.legislationSector, privacyRegulation.legislationSector) &&
        Objects.equals(this.reason, privacyRegulation.reason) &&
        Objects.equals(this.privateInformationType, privacyRegulation.privateInformationType) &&
        Objects.equals(this.action, privacyRegulation.action) &&
        Objects.equals(this.requiredConsent, privacyRegulation.requiredConsent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regId, legislationSector, reason, privateInformationType, action, requiredConsent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivacyRegulation {\n");
    
    sb.append("    regId: ").append(toIndentedString(regId)).append("\n");
    sb.append("    legislationSector: ").append(toIndentedString(legislationSector)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    privateInformationType: ").append(toIndentedString(privateInformationType)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    requiredConsent: ").append(toIndentedString(requiredConsent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

