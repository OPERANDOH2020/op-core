/**
 * Policy DB
 * The Policy Database that stores three types of documents in dedicated collections.   1) User Privacy Policy. Each OPERANDO user has one UPP document describing their privacy policies for each of the OSP services they are subscribed to. The UPP contains the current B2C privacy settings for a subscribed to OSP. The UPP contains the users privacy preferences. The UPP contains the G2C access policies for the OSP with justification for access.   2) The legislation policies. The regulations entered into OPERANDO using the OPERANDO regulation API.   3) The OSP descriptions and data requests. For each OSP its privacy policy, its access control rules, and the data it requests (as a workflow). For B2C, the set of privacy settings is stored. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package eu.operando.core.pdb.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * A privacy rule that reflects a given privacy legislation as described by a particular set of laws in a given jurisdiction. 
 */
@ApiModel(description = "A privacy rule that reflects a given privacy legislation as described by a particular set of laws in a given jurisdiction. ")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-28T10:18:38.563Z")
public class PrivacyRegulationInput   {
  @SerializedName("legislation_sector")
  private String legislationSector = null;

  @SerializedName("private_information_source")
  private String privateInformationSource = null;

  /**
   * The type of private information; e.g. is it information that identifies the user (e.g. id number)? is it location information about the user? Is it about their activities? 
   */
  public enum PrivateInformationTypeEnum {
    @SerializedName("Identification")
    IDENTIFICATION("Identification"),
    
    @SerializedName("Shared Identification")
    SHARED_IDENTIFICATION("Shared Identification"),
    
    @SerializedName("Geographic")
    GEOGRAPHIC("Geographic"),
    
    @SerializedName("Temporal")
    TEMPORAL("Temporal"),
    
    @SerializedName("Network and relationships")
    NETWORK_AND_RELATIONSHIPS("Network and relationships"),
    
    @SerializedName("Objects")
    OBJECTS("Objects"),
    
    @SerializedName("Behavioural")
    BEHAVIOURAL("Behavioural"),
    
    @SerializedName("Beliefs")
    BELIEFS("Beliefs"),
    
    @SerializedName("Measurements")
    MEASUREMENTS("Measurements");

    private String value;

    PrivateInformationTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("private_information_type")
  private PrivateInformationTypeEnum privateInformationType = null;

  @SerializedName("action")
  private String action = null;

  /**
   * The type of consent that must be followed
   */
  public enum RequiredConsentEnum {
    @SerializedName("opt-in")
    IN("opt-in"),
    
    @SerializedName("opt-out")
    OUT("opt-out");

    private String value;

    RequiredConsentEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("required_consent")
  private RequiredConsentEnum requiredConsent = null;

  public PrivacyRegulationInput legislationSector(String legislationSector) {
    this.legislationSector = legislationSector;
    return this;
  }

   /**
   * The identifier of the set of legislation rules this rule belongs to e.g. the UK data protection act. 
   * @return legislationSector
  **/
  @ApiModelProperty(example = "null", required = true, value = "The identifier of the set of legislation rules this rule belongs to e.g. the UK data protection act. ")
  public String getLegislationSector() {
    return legislationSector;
  }

  public void setLegislationSector(String legislationSector) {
    this.legislationSector = legislationSector;
  }

  public PrivacyRegulationInput privateInformationSource(String privateInformationSource) {
    this.privateInformationSource = privateInformationSource;
    return this;
  }

   /**
   * The source of the private data
   * @return privateInformationSource
  **/
  @ApiModelProperty(example = "null", value = "The source of the private data")
  public String getPrivateInformationSource() {
    return privateInformationSource;
  }

  public void setPrivateInformationSource(String privateInformationSource) {
    this.privateInformationSource = privateInformationSource;
  }

  public PrivacyRegulationInput privateInformationType(PrivateInformationTypeEnum privateInformationType) {
    this.privateInformationType = privateInformationType;
    return this;
  }

   /**
   * The type of private information; e.g. is it information that identifies the user (e.g. id number)? is it location information about the user? Is it about their activities? 
   * @return privateInformationType
  **/
  @ApiModelProperty(example = "null", value = "The type of private information; e.g. is it information that identifies the user (e.g. id number)? is it location information about the user? Is it about their activities? ")
  public PrivateInformationTypeEnum getPrivateInformationType() {
    return privateInformationType;
  }

  public void setPrivateInformationType(PrivateInformationTypeEnum privateInformationType) {
    this.privateInformationType = privateInformationType;
  }

  public PrivacyRegulationInput action(String action) {
    this.action = action;
    return this;
  }

   /**
   * The action being carried out on the data
   * @return action
  **/
  @ApiModelProperty(example = "null", value = "The action being carried out on the data")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public PrivacyRegulationInput requiredConsent(RequiredConsentEnum requiredConsent) {
    this.requiredConsent = requiredConsent;
    return this;
  }

   /**
   * The type of consent that must be followed
   * @return requiredConsent
  **/
  @ApiModelProperty(example = "null", value = "The type of consent that must be followed")
  public RequiredConsentEnum getRequiredConsent() {
    return requiredConsent;
  }

  public void setRequiredConsent(RequiredConsentEnum requiredConsent) {
    this.requiredConsent = requiredConsent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivacyRegulationInput privacyRegulationInput = (PrivacyRegulationInput) o;
    return Objects.equals(this.legislationSector, privacyRegulationInput.legislationSector) &&
        Objects.equals(this.privateInformationSource, privacyRegulationInput.privateInformationSource) &&
        Objects.equals(this.privateInformationType, privacyRegulationInput.privateInformationType) &&
        Objects.equals(this.action, privacyRegulationInput.action) &&
        Objects.equals(this.requiredConsent, privacyRegulationInput.requiredConsent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(legislationSector, privateInformationSource, privateInformationType, action, requiredConsent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivacyRegulationInput {\n");
    
    sb.append("    legislationSector: ").append(toIndentedString(legislationSector)).append("\n");
    sb.append("    privateInformationSource: ").append(toIndentedString(privateInformationSource)).append("\n");
    sb.append("    privateInformationType: ").append(toIndentedString(privateInformationType)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    requiredConsent: ").append(toIndentedString(requiredConsent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

