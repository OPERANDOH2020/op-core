/**
 * Policy DB
 * The Policy Database that stores three types of documents in dedicated collections.   1) User Privacy Policy. Each OPERANDO user has one UPP document describing their privacy policies for each of the OSP services they are subscribed to. The UPP contains the current B2C privacy settings for a subscribed to OSP. The UPP contains the users privacy preferences. The UPP contains the G2C access policies for the OSP with justification for access.   2) The legislation policies. The regulations entered into OPERANDO using the OPERANDO regulation API.   3) The OSP descriptions and data requests. For each OSP its privacy policy, its access control rules, and the data it requests (as a workflow). For B2C, the set of privacy settings is stored. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package eu.operando.core.pdb.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import eu.operando.core.pdb.common.model.PolicyAttribute;
import java.util.ArrayList;
import java.util.List;


/**
 * OSPDataRequest
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-10-28T10:18:38.563Z")
public class OSPDataRequest   {
  @SerializedName("requester_id")
  private String requesterId = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("requested_url")
  private String requestedUrl = null;

  /**
   * The action being carried out on the private date e.g. accessing, disclosing to a third party.  
   */
  public enum ActionEnum {
    @SerializedName("Collect")
    COLLECT("Collect"),
    
    @SerializedName("Access")
    ACCESS("Access"),
    
    @SerializedName("Use")
    USE("Use"),
    
    @SerializedName("Disclose")
    DISCLOSE("Disclose"),
    
    @SerializedName("Archive")
    ARCHIVE("Archive");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("attributes")
  private List<PolicyAttribute> attributes = new ArrayList<PolicyAttribute>();

  public OSPDataRequest requesterId(String requesterId) {
    this.requesterId = requesterId;
    return this;
  }

   /**
   * Id of the requester (typically the id of an OSP).
   * @return requesterId
  **/
  @ApiModelProperty(example = "null", value = "Id of the requester (typically the id of an OSP).")
  public String getRequesterId() {
    return requesterId;
  }

  public void setRequesterId(String requesterId) {
    this.requesterId = requesterId;
  }

  public OSPDataRequest subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * A description of the subject who the policies grants/doesn't grant to carry out. 
   * @return subject
  **/
  @ApiModelProperty(example = "null", value = "A description of the subject who the policies grants/doesn't grant to carry out. ")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public OSPDataRequest requestedUrl(String requestedUrl) {
    this.requestedUrl = requestedUrl;
    return this;
  }

   /**
   * The Requested URL of the data. 
   * @return requestedUrl
  **/
  @ApiModelProperty(example = "null", value = "The Requested URL of the data. ")
  public String getRequestedUrl() {
    return requestedUrl;
  }

  public void setRequestedUrl(String requestedUrl) {
    this.requestedUrl = requestedUrl;
  }

  public OSPDataRequest action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * The action being carried out on the private date e.g. accessing, disclosing to a third party.  
   * @return action
  **/
  @ApiModelProperty(example = "null", value = "The action being carried out on the private date e.g. accessing, disclosing to a third party.  ")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public OSPDataRequest attributes(List<PolicyAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public OSPDataRequest addAttributesItem(PolicyAttribute attributesItem) {
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * The set of context attributes attached to the policy (e.g. subject role, subject purpose) 
   * @return attributes
  **/
  @ApiModelProperty(example = "null", value = "The set of context attributes attached to the policy (e.g. subject role, subject purpose) ")
  public List<PolicyAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<PolicyAttribute> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OSPDataRequest oSPDataRequest = (OSPDataRequest) o;
    return Objects.equals(this.requesterId, oSPDataRequest.requesterId) &&
        Objects.equals(this.subject, oSPDataRequest.subject) &&
        Objects.equals(this.requestedUrl, oSPDataRequest.requestedUrl) &&
        Objects.equals(this.action, oSPDataRequest.action) &&
        Objects.equals(this.attributes, oSPDataRequest.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requesterId, subject, requestedUrl, action, attributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OSPDataRequest {\n");
    
    sb.append("    requesterId: ").append(toIndentedString(requesterId)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    requestedUrl: ").append(toIndentedString(requestedUrl)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

