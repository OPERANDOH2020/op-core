/**
 * Policy DB
 * The Policy Database that stores three types of documents in dedicated collections.   1) User Privacy Policy. Each OPERANDO user has one UPP document describing their privacy policies for each of the OSP services they are subscribed to. The UPP contains the current B2C privacy settings for a subscribed to OSP. The UPP contains the users privacy preferences. The UPP contains the G2C access policies for the OSP with justification for access.   2) The legislation policies. The regulations entered into OPERANDO using the OPERANDO regulation API.   3) The OSP descriptions and data requests. For each OSP its privacy policy, its access control rules, and the data it requests (as a workflow). For B2C, the set of privacy settings is stored. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.OSPPrivacyPolicyInput;
import io.swagger.client.model.PrivacyRegulationInput;
import io.swagger.client.model.PrivacyRegulation;
import io.swagger.client.model.UserPrivacyPolicy;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for POSTApi
 */
public class POSTApiTest {

    private final POSTApi api = new POSTApi();

    
    /**
     * Create a new OSP entry in the database.
     *
     * Called by the policy computation component when a new regulation is added to OPERANDO. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void oSPPostTest() throws ApiException {
        OSPPrivacyPolicyInput ospPolicy = null;
        // api.oSPPost(ospPolicy);

        // TODO: test validations
    }
    
    /**
     * Create a new legislation entry in the database.
     *
     * Called by the policy computation component when a new regulation is added to OPERANDO. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void regulationsPostTest() throws ApiException {
        PrivacyRegulationInput regulation = null;
        // PrivacyRegulation response = api.regulationsPost(regulation);

        // TODO: test validations
    }
    
    /**
     * Create a new UPP entry in the database for the user.
     *
     * Called when a new user is registered with operando. Their new privacy preferences are passed in the UPP document and stored in the policy DB. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userPrivacyPolicyPostTest() throws ApiException {
        UserPrivacyPolicy upp = null;
        // api.userPrivacyPolicyPost(upp);

        // TODO: test validations
    }
    
}
