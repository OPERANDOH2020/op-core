<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>eu.operando.int.core.pfb.server.test.00.src.dvp</artifactId>
	<packaging>pom</packaging>
	<parent>
		<groupId>eu.operando.int</groupId>
		<artifactId>eu.operando.int.src.dvp</artifactId>
		<version>ALPHA</version>
	</parent>
	<build>
		<!-- First we define the source code directories for a java application 
			server generated with swagger we will have two folders src/main and src/gen 
			maven conventions stablish one source folder but others can be added using 
			build-helper-maven-plugin add-source -->
		<!-- this is not considered and I need to add using the build-helper-maven-plugin -->
		<!-- <sourceDirectory>${sources.path}/src/main/java</sourceDirectory> -->
		<plugins>
			<!-- We check the value of some properties values -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<id>echo</id>
						<phase>initialize</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>Displaying values of properties</echo>
								<echo>[docker.image.name]=${docker.image.name}</echo>
								<echo>[docker.image.version]=${docker.image.version}</echo>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- added to support docker image creation -->
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<!-- last version in https://mvnrepository.com/artifact/org.jolokia/docker-maven-plugin -->
				<version>0.13.9</version>
				<configuration>
					<images>
						<image>
							<alias>${docker.name}</alias>
							<name>${docker.image.name}:${docker.image.version}</name>
							<build>
								<assembly>
									<!-- this time we will do it from a docker file element is needed 
										to switch the usage of the extrenal file -->
									<dockerFileDir>.</dockerFileDir>
									<!-- end -->
								</assembly>
							</build>
							<run>
								<log>
									<enabled>true</enabled>
									<color>red</color>
								</log>
								<wait>
									<log>ALL SUCCESSFUL</log>
								</wait>
								<namingStrategy>alias</namingStrategy>
								<env>
									<MYSQL_DB_HOST>${mysql.db.host}</MYSQL_DB_HOST>
									<MYSQL_DB_NAME>${mysql.db.name}</MYSQL_DB_NAME>
									<MYSQL_DB_PASSWORD>${mysql.db.password}</MYSQL_DB_PASSWORD>
									<MYSQL_DB_USER>${mysql.db.user}</MYSQL_DB_USER>
								</env>
								<ports>
								</ports>
							</run>
						</image>
					</images>
					<!-- <docker.follow></docker.follow> -->
				</configuration>
			</plugin>
			<!-- end of addition -->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>1.0</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<!-- this is not considered and I need to add using the build-helper-maven-plugin -->
		<!-- <resources> -->
		<!-- <resource> -->
		<!-- <directory>${sources.path}/src/main/resources/config</directory> -->
		<!-- <filtering>true</filtering> -->
		<!-- </resource> -->
		<!-- </resources> -->
	</build>
	<properties>
		<docker.name>eu.operando.core.pfb.server.test.00</docker.name>
		<docker.image.name>${docker.registry.name}${docker.submitter}/${docker.name}</docker.image.name>
		<docker.image.version>${project.version}</docker.image.version>
		<mysql.db.host>${operando.mysql.host}</mysql.db.host>
		<mysql.db.port>${operando.mysql.port}</mysql.db.port>
		<mysql.db.name>operando_privacyforbenefitdb</mysql.db.name>
		<mysql.db.user>${operando.mysql.root.user}</mysql.db.user>
		<mysql.db.password>${operando.mysql.root.password}</mysql.db.password>
	</properties>
</project>