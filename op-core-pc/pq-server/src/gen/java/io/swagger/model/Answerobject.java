/*
 * Privacy Questionairre API
 * A set of methods to manage privacy quesions.   Privacy questions are generated to form a questionairre that can be displayed to the user. The answers to these questions form a privacy sensitivity index.  For an individual service (OSP) a set of questions can be generated
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * Answerobject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-06-30T11:50:08.812Z")
public class Answerobject   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("category")
  private String category = null;

  @JsonProperty("score")
  private String score = null;

  @JsonProperty("roles")
  private String roles = null;

  @JsonProperty("action")
  private String action = null;

  public Answerobject id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the question (from the weight field of the question)
   * @return id
  **/
  @JsonProperty("id")
  @ApiModelProperty(value = "The id of the question (from the weight field of the question)  ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Answerobject category(String category) {
    this.category = category;
    return this;
  }

   /**
   * The data category this relates to
   * @return category
  **/
  @JsonProperty("category")
  @ApiModelProperty(value = "The data category this relates to  ")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public Answerobject score(String score) {
    this.score = score;
    return this;
  }

   /**
   * The result between 1 and 4 (strongly disagree, disagree, agree, strongly agree)
   * @return score
  **/
  @JsonProperty("score")
  @ApiModelProperty(value = "The result between 1 and 4 (strongly disagree, disagree, agree, strongly agree) ")
  public String getScore() {
    return score;
  }

  public void setScore(String score) {
    this.score = score;
  }

  public Answerobject roles(String roles) {
    this.roles = roles;
    return this;
  }

   /**
   * The role of the person this relates to
   * @return roles
  **/
  @JsonProperty("roles")
  @ApiModelProperty(value = "The role of the person this relates to  ")
  public String getRoles() {
    return roles;
  }

  public void setRoles(String roles) {
    this.roles = roles;
  }

  public Answerobject action(String action) {
    this.action = action;
    return this;
  }

   /**
   * The importance of this question to an overal ranking 0..1 with 1 the greatest importance.
   * @return action
  **/
  @JsonProperty("action")
  @ApiModelProperty(value = "The importance of this question to an overal ranking 0..1 with 1 the greatest importance.          ")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Answerobject answerobject = (Answerobject) o;
    return Objects.equals(this.id, answerobject.id) &&
        Objects.equals(this.category, answerobject.category) &&
        Objects.equals(this.score, answerobject.score) &&
        Objects.equals(this.roles, answerobject.roles) &&
        Objects.equals(this.action, answerobject.action);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, category, score, roles, action);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Answerobject {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

