<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.operando</groupId>
	<artifactId>eu.operando.core.ose.server</artifactId>
	<packaging>${packaging.type}</packaging>
	<name>osp-core-pdb</name>
	<version>1.0.0</version>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!-- added to support right path -->
					<warName>${user.warName}</warName>
					<!-- end of addition -->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty-version}</version>
				<configuration>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<webAppSourceDirectory>target/${project.artifactId}-${project.version}</webAppSourceDirectory>
					<stopPort>8079</stopPort>
					<stopKey>stopit</stopKey>
					<stopWait>10</stopWait>
					<httpConnector>
						<port>8080</port>
						<idleTimeout>60000</idleTimeout>
					</httpConnector>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- added to support docker image creation -->
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.13.9</version> <!-- last version in https://mvnrepository.com/artifact/org.jolokia/docker-maven-plugin -->
				<configuration>
					<images>
						<image>
							<alias>eu.operando.core.ose.server</alias>
							<name>${docker.repository.name}:${project.version}</name>
							<build>
								<from>tomcat:7</from> <!-- in our case we start from tomcat image -->
								<assembly>
									<basedir>/</basedir>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>8080</port>
								</ports>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<ports>
									<port>${docker.logdb.port}:8080</port>
								</ports>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
			<!-- end of addition -->
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources/config</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
<dependencies>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jersey-jaxrs</artifactId>
            <version>${swagger-core-version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api-version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.8</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>snakeyaml</artifactId>
                    <groupId>org.yaml</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>bsh</artifactId>
                    <groupId>org.beanshell</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- additional dependencies -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>
        
        <dependency>
            <groupId>eu.operando</groupId>
            <artifactId>eu.operando.core.ldb.client</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>eu.operando</groupId>
            <artifactId>eu.operando.core.pdb.client</artifactId>
            <version>1.0.0</version>
        </dependency>
    </dependencies>
	<repositories>
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<properties>
		<java.version>1.7</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<swagger-core-version>1.5.8</swagger-core-version>
		<jetty-version>9.2.9.v20150224</jetty-version>
		<jersey-version>1.18</jersey-version>
		<slf4j-version>1.6.3</slf4j-version>
		<junit-version>4.12</junit-version>
                <gson-version>2.6.2</gson-version>
		<logback-version>1.1.7</logback-version>
		<servlet-api-version>2.5</servlet-api-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- added to support docker image creation -->
		<docker.registry.name>localhost:5000/</docker.registry.name><!-- leave 
			empty for docker hub; use e.g. "localhost:5000/" for a local docker registry -->
		<docker.repository.name>${docker.registry.name}tecnalia/eu.operando.core.ose.server</docker.repository.name>
		<docker.logdb.port>8094</docker.logdb.port>
		<user.warName>operando#core#ose</user.warName>
		<mongo.host>localhost</mongo.host>
		<mongo.port>27017</mongo.port>
		<packaging.type>jar</packaging.type>
		<artifactId.name>jar</artifactId.name>
		<!-- end of addition -->
	</properties>
	<profiles>
		<profile>
			<id>jenkins-dev</id>
			<activation>
				<property>
					<name>ci</name>
				</property>
			</activation>
			<properties>
				<mongo.host>mongo.integration.operando.dmz.lab.esilab.org</mongo.host>
				<packaging.type>war</packaging.type>
				<artifactId.name>jar</artifactId.name>
			</properties>
		</profile>
	</profiles>
</project>