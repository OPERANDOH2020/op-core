<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.swagger</groupId>
	<artifactId>eu.operando.core.ldb.server</artifactId>
	<packaging>war</packaging>
	<name>eu.operando.core.ldb.server</name>
	<version>1.0.0</version>
	<build>
	    <pluginManagement>
	    	<plugins>
		    <!-- added to support initial database creation -->
    	    <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>sql-maven-plugin</artifactId>
		        <version>1.5</version>
		
		        <dependencies>
		          <!-- specify the dependent JDBC driver here -->
		          <dependency>
         			<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>5.0.8</version>
		          </dependency>
		        </dependencies>
		
		        <!-- common configuration shared by all executions -->
		        <configuration>
		          <driver>com.mysql.jdbc.Driver</driver>
		          <url>jdbc:mysql://${mysql.host}:${mysql.port}/operando_logdb</url>
		          <username>root</username>
		          <password>root</password>
		        </configuration>	
		        <executions>
		          <execution>
		            <id>initalize</id>
		            <phase>initalize</phase>
		            <goals>
		              <goal>execute</goal>
		            </goals>
		            <!-- specific configuration for this execution -->
		            <configuration>
		              <!-- specify your SQL commands, can be all of the following configurations -->
		              <srcFiles>
		                <srcFile>src/main/sql/creation.sql</srcFile>
		              </srcFiles>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
			<!-- end of addition -->
			</plugins>	    
	    </pluginManagement>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<server>TomcatServer</server>
					<!-- /operando/core/logdb is the context and it is neccesary to deploy to tomcat several modules generated automatically from swagger -->
					<path>/operando/core/logdb</path>					
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>				
				<version>2.1.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty-version}</version>
				<configuration>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<webAppSourceDirectory>target/${project.artifactId}-${project.version}</webAppSourceDirectory>
					<stopPort>8079</stopPort>
					<stopKey>stopit</stopKey>
					<httpConnector>
						<port>8080</port>
						<idleTimeout>60000</idleTimeout>
					</httpConnector>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
		    <!-- added to support docker image creation -->
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.13.9</version> <!--  last version in https://mvnrepository.com/artifact/org.jolokia/docker-maven-plugin -->
				<configuration>
					<images>
						<image>
							<alias>${project.artifactId}</alias>
							<name>${docker.repository.name}:${project.version}</name>
							<build>
								<from>tomcat:7</from> <!-- in our case we start from tomcat image -->
								<assembly>
								    <basedir>/</basedir>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>8080</port>
								</ports>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<ports>
									<port>${docker.logdb.port}:8080</port>
								</ports>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
			<!-- end of addition -->
		</plugins>
	    <resources>
	    	<resource>
		        <directory>src/main/resources/config</directory>
		        <filtering>true</filtering>
	      	</resource>
	    </resources>
	</build>
	<dependencies>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey-jaxrs</artifactId>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.8</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
				<exclusion>
					<artifactId>snakeyaml</artifactId>
					<groupId>org.yaml</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bsh</artifactId>
					<groupId>org.beanshell</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.8</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<properties>
		<swagger-core-version>1.5.8</swagger-core-version>
		<jetty-version>9.2.9.v20150224</jetty-version>
		<jersey-version>1.18.1</jersey-version>
		<slf4j-version>1.6.3</slf4j-version>
		<junit-version>4.8.1</junit-version>
		<servlet-api-version>2.5</servlet-api-version>
		<!-- added to support docker image creation -->
		<docker.registry.name>localhost:5000/</docker.registry.name><!-- leave empty for docker hub; use e.g. "localhost:5000/" for a local docker registry -->
        <docker.repository.name>${docker.registry.name}tecnalia/${project.artifactId}</docker.repository.name>
        <docker.logdb.port>8090</docker.logdb.port>
 	    <mysql.host>localhost</mysql.host>
        <mysql.port>3306</mysql.port>
        <!-- end of addition -->
	</properties>
	<profiles>
		<profile>
		  <id>jenkins-dev</id>
		  <activation>
            <property>
                <name>ci</name>
            </property>
          </activation>
		  <properties>
	        <mysql.host>10.0.0.5</mysql.host>
		  </properties>
		</profile>
	</profiles>
</project>